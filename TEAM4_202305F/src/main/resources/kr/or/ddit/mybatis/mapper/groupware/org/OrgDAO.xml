<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.company.org.dao.OrgDAO"> 

	<resultMap type="EmployeeVO" id="empMap" autoMapping="true">
		<id property="empCd" column="EMP_CD" />
		<association property="dept" javaType="DeptVO" autoMapping="true"/>
		<association property="common" javaType="CommonVO" autoMapping="true"/>
	</resultMap> 
	
<!-- 	<select id="selectPmemListOrg" resultMap="empMap">  -->
<!-- 		SELECT -->
<!-- 	    E.EMP_CD, E.EMP_PW, E.EMP_NAME, E.EMP_ZIP, E.EMP_ADRES -->
<!-- 	    , E.EMP_ADRES_DETAIL, E.EMP_BIRTH, E.EMP_SSN, E.EMP_RANK -->
<!-- 	    , E.EMP_HIREDATE, E.DEPT_CD, E.EMP_MAIL, E.EMP_LOGIN_FLAG -->
<!-- 	    , E.EMP_PROFILE_IMG, E.EMP_TELNO, E.EMP_SIGN_IMG -->
<!-- 	    , E.EMP_CRTFC_NO, E.EMP_QR, E.EMP_EXTENSION, E.EMP_POSITION -->
<!-- 	    , E.EMP_EMAIL_SECOND, E.EMP_SUPRR -->
<!-- 	    , D.DEPT_CD, D.DEPT_NAME, D.U_DEPT_CD -->
<!-- 	    , C.COMMON_CODE_CD,  C.COMMON_CODE_UPPER_CD, C.COMMON_CODE_SJ -->
<!-- 	    , C.COMMON_CODE_ENGL_SJ, C.COMMON_CODE_USE_AT -->
<!-- 	FROM -->
<!-- 	    EMPLOYEE E, DEPT D, COMMON_CODE C -->
<!-- 	WHERE     -->
<!-- 	    E.DEPT_CD = D.DEPT_CD AND E.EMP_RANK = C.COMMON_CODE_CD -->
<!-- 	    AND E.EMP_CD NOT IN (SELECT EMP_CD FROM PMEMBER WHERE PRO_SN = #{proSn})  -->
<!-- 	ORDER BY SUBSTR(E.EMP_RANK,6,2) ASC  -->
	  
<!-- 	</select> --> 
	
<!-- 	proSn의 값이 들어오면 석원 멤버리스트  --> 
	<select id="selectListOrg" resultMap="empMap">
		SELECT
			 E.EMP_CD, E.EMP_PW, E.EMP_NAME, E.EMP_ZIP, E.EMP_ADRES
    		, E.EMP_ADRES_DETAIL, E.EMP_BIRTH, E.EMP_SSN, E.EMP_RANK
    		, E.EMP_HIREDATE, E.DEPT_CD, E.EMP_MAIL, E.EMP_LOGIN_FLAG
    		, E.EMP_PROFILE_IMG, E.EMP_TELNO, E.EMP_SIGN_IMG
    		, E.EMP_CRTFC_NO, E.EMP_QR, E.EMP_EXTENSION, E.EMP_POSITION
    		, E.EMP_EMAIL_SECOND, E.EMP_SUPRR
            ,  D.DEPT_CD, D.DEPT_NAME, D.U_DEPT_CD
            , C.COMMON_CODE_CD,  C.COMMON_CODE_UPPER_CD, C.COMMON_CODE_SJ
            , C.COMMON_CODE_ENGL_SJ, C.COMMON_CODE_USE_AT
		FROM 
		    EMPLOYEE E, DEPT D, COMMON_CODE C
		WHERE    
		   E.DEPT_CD = D.DEPT_CD AND E.EMP_RANK = C.COMMON_CODE_CD
		    AND E.EMP_LOGIN_FLAG NOT IN 'L'  
		   <if test="proSn neq null">
		   AND E.EMP_CD NOT IN (SELECT EMP_CD FROM PMEMBER WHERE PRO_SN = #{proSn})
		    AND E.EMP_LOGIN_FLAG NOT IN 'L'   
		   </if>
		ORDER BY SUBSTR(E.EMP_RANK,6,2) ASC
	</select> 
	
	<select id="selectListDept" resultType="DeptVO">
		SELECT 
			DEPT_CD, DEPT_NAME, U_DEPT_CD
		FROM
			DEPT	
		ORDER BY DEPT_CD ASC
	</select>
	
	<select id="selectOrg" resultMap="empMap" parameterType="String">
		SELECT
		    E.EMP_CD, E.EMP_PW, E.EMP_NAME, E.EMP_ZIP, E.EMP_ADRES
		    , E.EMP_ADRES_DETAIL, E.EMP_BIRTH, E.EMP_SSN, E.EMP_RANK
		    , E.EMP_HIREDATE, E.DEPT_CD, E.EMP_MAIL, E.EMP_LOGIN_FLAG
		    , E.EMP_PROFILE_IMG, E.EMP_TELNO, E.EMP_SIGN_IMG
		    , E.EMP_CRTFC_NO, E.EMP_QR, E.EMP_EXTENSION, E.EMP_POSITION
		    , E.EMP_EMAIL_SECOND, E.EMP_SUPRR
		    , D.DEPT_CD, D.DEPT_NAME, D.U_DEPT_CD
		    , C.COMMON_CODE_SJ
		FROM
		    EMPLOYEE E LEFT OUTER JOIN DEPT D ON (E.DEPT_CD = D.DEPT_CD) LEFT OUTER JOIN COMMON_CODE C ON (E.EMP_RANK = C.COMMON_CODE_CD)
		WHERE
		    E.EMP_CD = #{empCd}
	</select>
	
	<insert id="insertDept" parameterType="DeptVO">
		<selectKey resultType="String" order="BEFORE" keyProperty="deptCd" >
	        SELECT 'DEPT_010' || (SUBSTR(MAX(DEPT_CD),9,2)+10 ) DEPT_CD
			FROM DEPT
	    </selectKey>
		INSERT INTO DEPT (
		    DEPT_CD,
		    DEPT_NAME,
		    U_DEPT_CD
		) VALUES (
		    #{deptCd, jdbcType=VARCHAR},
		    #{deptName},
		    'DEPT_010'
		) 
	</insert>
	
	<delete id="deleteDept" parameterType="String">
		 DELETE FROM DEPT
        WHERE
        DEPT_CD = #{DEPTCD}
	</delete>
</mapper>


